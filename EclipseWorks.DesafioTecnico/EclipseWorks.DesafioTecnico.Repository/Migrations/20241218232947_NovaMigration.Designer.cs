// <auto-generated />
using System;
using EclipseWorks.DesafioTecnico.Repository.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EclipseWorks.DesafioTecnico.Repository.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241218232947_NovaMigration")]
    partial class NovaMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EclipseWorks.DesafioTecnico.Domain.Projetos.Projeto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("isExcluido")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Projetos", (string)null);
                });

            modelBuilder.Entity("EclipseWorks.DesafioTecnico.Domain.Tarefas.ComentarioTarefa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdTarefa")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdTarefa");

                    b.HasIndex("IdUsuario");

                    b.ToTable("ComentarioTarefa", (string)null);
                });

            modelBuilder.Entity("EclipseWorks.DesafioTecnico.Domain.Tarefas.HistoricoTarefa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("DadosAlterados")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdTarefa")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdTarefa");

                    b.HasIndex("IdUsuario");

                    b.ToTable("HistoricoAlteracaoTarefa", (string)null);
                });

            modelBuilder.Entity("EclipseWorks.DesafioTecnico.Domain.Tarefas.Tarefa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid>("IdProjeto")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Prioridade")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("isExcluido")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdProjeto");

                    b.ToTable("Tarefas", (string)null);
                });

            modelBuilder.Entity("EclipseWorks.DesafioTecnico.Domain.Usuarios.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("b0a78f71-3d48-4cb0-8ad4-6eab17445928"),
                            DataCriacao = new DateTime(2024, 12, 18, 20, 29, 43, 670, DateTimeKind.Local).AddTicks(7188),
                            Email = "user01@teste.com.br",
                            Nome = "User 01"
                        },
                        new
                        {
                            Id = new Guid("b789be54-56d9-411e-927e-3431a10ef9fd"),
                            DataCriacao = new DateTime(2024, 12, 18, 20, 29, 43, 673, DateTimeKind.Local).AddTicks(6865),
                            Email = "user02@teste.com.br",
                            Nome = "User 02"
                        },
                        new
                        {
                            Id = new Guid("fe630df3-197b-4aa5-b6fd-55e34cb20d54"),
                            DataCriacao = new DateTime(2024, 12, 18, 20, 29, 43, 673, DateTimeKind.Local).AddTicks(6886),
                            Email = "user03@teste.com.br",
                            Nome = "User 03"
                        });
                });

            modelBuilder.Entity("EclipseWorks.DesafioTecnico.Domain.Projetos.Projeto", b =>
                {
                    b.HasOne("EclipseWorks.DesafioTecnico.Domain.Usuarios.Usuario", "Usuario")
                        .WithMany("Projetos")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EclipseWorks.DesafioTecnico.Domain.Tarefas.ComentarioTarefa", b =>
                {
                    b.HasOne("EclipseWorks.DesafioTecnico.Domain.Tarefas.Tarefa", "Tarefa")
                        .WithMany("Comentarios")
                        .HasForeignKey("IdTarefa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EclipseWorks.DesafioTecnico.Domain.Usuarios.Usuario", "Usuario")
                        .WithMany("Comentarios")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tarefa");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EclipseWorks.DesafioTecnico.Domain.Tarefas.HistoricoTarefa", b =>
                {
                    b.HasOne("EclipseWorks.DesafioTecnico.Domain.Tarefas.Tarefa", "Tarefa")
                        .WithMany("HistoricoAtualizacoesTarefa")
                        .HasForeignKey("IdTarefa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EclipseWorks.DesafioTecnico.Domain.Usuarios.Usuario", "Usuario")
                        .WithMany("HistoricoAtualizacoesTarefa")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tarefa");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EclipseWorks.DesafioTecnico.Domain.Tarefas.Tarefa", b =>
                {
                    b.HasOne("EclipseWorks.DesafioTecnico.Domain.Projetos.Projeto", "Projeto")
                        .WithMany("Tarefas")
                        .HasForeignKey("IdProjeto")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("EclipseWorks.DesafioTecnico.Domain.Projetos.Projeto", b =>
                {
                    b.Navigation("Tarefas");
                });

            modelBuilder.Entity("EclipseWorks.DesafioTecnico.Domain.Tarefas.Tarefa", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("HistoricoAtualizacoesTarefa");
                });

            modelBuilder.Entity("EclipseWorks.DesafioTecnico.Domain.Usuarios.Usuario", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("HistoricoAtualizacoesTarefa");

                    b.Navigation("Projetos");
                });
#pragma warning restore 612, 618
        }
    }
}
